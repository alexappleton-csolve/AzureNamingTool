name: Azure Naming Tool - Build and deploy to an Azure Web App

env:
  AZURE_WEBAPP_PACKAGE_PATH: '.'      # set this to the path to your web app project, defaults to the repository root
  DOTNET_VERSION: '8.0.x'               # set this to the .NET Core version to use

on:
  push:
    branches: [ "main" ]
  workflow_dispatch:
  
defaults:
  run:
    working-directory: src
    
permissions:
  contents: read
                  
jobs:
  check-secrets:
    runs-on: ubuntu-latest
    defaults:
      run:
        working-directory: src    
    outputs:
      secrets-valid: ${{ steps.secrets-valid.outputs.isvalid }}
    steps:
      - uses: actions/checkout@v3      
      - id: secrets-valid
        env: 
          azure-webapp-name: ${{ secrets.AZURE_WEBAPP_NAME }}
        if: (env.azure-webapp-name != null)
        run: echo 'isvalid=true' >> $GITHUB_OUTPUT
          
  build:
    runs-on: ubuntu-latest
    defaults:
      run:
        working-directory: src    
    needs: [check-secrets]
    if: needs.check-secrets.outputs.secrets-valid == 'true'
    steps:
      - uses: actions/checkout@v3
      - name: Set up .NET Core
        uses: actions/setup-dotnet@v2
        with:
          dotnet-version: ${{ env.DOTNET_VERSION }}
      
      - name: Set up dependency caching for faster builds
        uses: actions/cache@v3
        with:
          path: ~/.nuget/packages
          key: ${{ runner.os }}-nuget-${{ hashFiles('**/packages.lock.json') }}
          restore-keys: |
            ${{ runner.os }}-nuget-
      - name: Build with dotnet
        run: dotnet build --configuration Release

      - name: dotnet publish
        run: dotnet publish -c Release -o ${{env.DOTNET_ROOT}}/myapp

      - name: Upload artifact for deployment job
        uses: actions/upload-artifact@v4.4.3
        with:
          name: .net-app
          path: ${{env.DOTNET_ROOT}}/myapp

  deploy: 
    defaults:
      run:
        working-directory: ready/AzNamingTool 
    permissions:
      contents: none
    runs-on: ubuntu-latest
    needs: [build, check-secrets]
    if: needs.check-secrets.outputs.secrets-valid == 'true'
    environment:
      name: 'Development'
      url: ${{ steps.deploy-to-webapp.outputs.webapp-url }}
    steps:
      - name: Download artifact from build job
        uses: actions/download-artifact@v4.1.8
        with:
          name: .net-app

      - name: Azure Login Using Managed Identity
        uses: azure/login@v1
        with:
          identity: 'system'
          
      - name: Deploy to Azure Web App
        id: deploy-to-webapp
        uses: azure/webapps-deploy@v2
        with:
          app-name: ${{ secrets.AZURE_WEBAPP_NAME }}
          package: ${{ env.AZURE_WEBAPP_PACKAGE_PATH }}
